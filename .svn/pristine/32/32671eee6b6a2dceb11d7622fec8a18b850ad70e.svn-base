package com.rsaame.pas.dao.model;

import java.math.BigDecimal;
import java.util.Date;

// Generated Feb 3, 2012 11:21:12 AM by Hibernate Tools 3.4.0.CR1

/**
 * TMasProductCriteria generated by hbm2java
 */
public class TMasProductCriteria implements java.io.Serializable {

	private TMasProductCriteriaId id;
	
	private String pcrEDesc;
	private String pcrADesc;
	private BigDecimal pcrMinVal;
	private BigDecimal pcrMaxVal;
	private Date pcrEffectiveDate;
	private Date pcrExpiryDate;
	private Boolean pcrStatus;
	private Integer pcrPreparedBy;
	private Date pcrPreparedDt;
	private Integer pcrModifiedBy;
	private Date pcrModifiedDt;

	public TMasProductCriteria() {
	}

	public TMasProductCriteria(TMasProductCriteriaId id) {
		this.id = id;
	}

	public TMasProductCriteriaId getId() {
		return this.id;
	}

	public void setId(TMasProductCriteriaId id) {
		this.id = id;
	}

	/**
	 * @return the pcrEDesc
	 */
	public String getPcrEDesc() {
		return pcrEDesc;
	}

	/**
	 * @param pcrEDesc the pcrEDesc to set
	 */
	public void setPcrEDesc(String pcrEDesc) {
		this.pcrEDesc = pcrEDesc;
	}

	/**
	 * @return the pcrADesc
	 */
	public String getPcrADesc() {
		return pcrADesc;
	}

	/**
	 * @param pcrADesc the pcrADesc to set
	 */
	public void setPcrADesc(String pcrADesc) {
		this.pcrADesc = pcrADesc;
	}

	/**
	 * @return the pcrMinVal
	 */
	public BigDecimal getPcrMinVal() {
		return pcrMinVal;
	}

	/**
	 * @param pcrMinVal the pcrMinVal to set
	 */
	public void setPcrMinVal(BigDecimal pcrMinVal) {
		this.pcrMinVal = pcrMinVal;
	}

	/**
	 * @return the pcrMaxVal
	 */
	public BigDecimal getPcrMaxVal() {
		return pcrMaxVal;
	}

	/**
	 * @param pcrMaxVal the pcrMaxVal to set
	 */
	public void setPcrMaxVal(BigDecimal pcrMaxVal) {
		this.pcrMaxVal = pcrMaxVal;
	}

	/**
	 * @return the pcrEffectiveDate
	 */
	public Date getPcrEffectiveDate() {
		return pcrEffectiveDate;
	}

	/**
	 * @param pcrEffectiveDate the pcrEffectiveDate to set
	 */
	public void setPcrEffectiveDate(Date pcrEffectiveDate) {
		this.pcrEffectiveDate = pcrEffectiveDate;
	}

	/**
	 * @return the pcrExpiryDate
	 */
	public Date getPcrExpiryDate() {
		return pcrExpiryDate;
	}

	/**
	 * @param pcrExpiryDate the pcrExpiryDate to set
	 */
	public void setPcrExpiryDate(Date pcrExpiryDate) {
		this.pcrExpiryDate = pcrExpiryDate;
	}

	/**
	 * @return the pcrStatus
	 */
	public Boolean getPcrStatus() {
		return pcrStatus;
	}

	/**
	 * @param pcrStatus the pcrStatus to set
	 */
	public void setPcrStatus(Boolean pcrStatus) {
		this.pcrStatus = pcrStatus;
	}

	/**
	 * @return the pcrPreparedBy
	 */
	public Integer getPcrPreparedBy() {
		return pcrPreparedBy;
	}

	/**
	 * @param pcrPreparedBy the pcrPreparedBy to set
	 */
	public void setPcrPreparedBy(Integer pcrPreparedBy) {
		this.pcrPreparedBy = pcrPreparedBy;
	}

	/**
	 * @return the pcrPreparedDt
	 */
	public Date getPcrPreparedDt() {
		return pcrPreparedDt;
	}

	/**
	 * @param pcrPreparedDt the pcrPreparedDt to set
	 */
	public void setPcrPreparedDt(Date pcrPreparedDt) {
		this.pcrPreparedDt = pcrPreparedDt;
	}

	/**
	 * @return the pcrModifiedBy
	 */
	public Integer getPcrModifiedBy() {
		return pcrModifiedBy;
	}

	/**
	 * @param pcrModifiedBy the pcrModifiedBy to set
	 */
	public void setPcrModifiedBy(Integer pcrModifiedBy) {
		this.pcrModifiedBy = pcrModifiedBy;
	}

	/**
	 * @return the pcrModifiedDt
	 */
	public Date getPcrModifiedDt() {
		return pcrModifiedDt;
	}

	/**
	 * @param pcrModifiedDt the pcrModifiedDt to set
	 */
	public void setPcrModifiedDt(Date pcrModifiedDt) {
		this.pcrModifiedDt = pcrModifiedDt;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result
				+ ((pcrADesc == null) ? 0 : pcrADesc.hashCode());
		result = prime * result
				+ ((pcrEDesc == null) ? 0 : pcrEDesc.hashCode());
		result = prime
				* result
				+ ((pcrEffectiveDate == null) ? 0 : pcrEffectiveDate.hashCode());
		result = prime * result
				+ ((pcrExpiryDate == null) ? 0 : pcrExpiryDate.hashCode());
		result = prime * result
				+ ((pcrMaxVal == null) ? 0 : pcrMaxVal.hashCode());
		result = prime * result
				+ ((pcrMinVal == null) ? 0 : pcrMinVal.hashCode());
		result = prime * result
				+ ((pcrModifiedBy == null) ? 0 : pcrModifiedBy.hashCode());
		result = prime * result
				+ ((pcrModifiedDt == null) ? 0 : pcrModifiedDt.hashCode());
		result = prime * result
				+ ((pcrPreparedBy == null) ? 0 : pcrPreparedBy.hashCode());
		result = prime * result
				+ ((pcrPreparedDt == null) ? 0 : pcrPreparedDt.hashCode());
		result = prime * result
				+ ((pcrStatus == null) ? 0 : pcrStatus.hashCode());
		return result;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		TMasProductCriteria other = (TMasProductCriteria) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (pcrADesc == null) {
			if (other.pcrADesc != null)
				return false;
		} else if (!pcrADesc.equals(other.pcrADesc))
			return false;
		if (pcrEDesc == null) {
			if (other.pcrEDesc != null)
				return false;
		} else if (!pcrEDesc.equals(other.pcrEDesc))
			return false;
		if (pcrEffectiveDate == null) {
			if (other.pcrEffectiveDate != null)
				return false;
		} else if (!pcrEffectiveDate.equals(other.pcrEffectiveDate))
			return false;
		if (pcrExpiryDate == null) {
			if (other.pcrExpiryDate != null)
				return false;
		} else if (!pcrExpiryDate.equals(other.pcrExpiryDate))
			return false;
		if (pcrMaxVal == null) {
			if (other.pcrMaxVal != null)
				return false;
		} else if (!pcrMaxVal.equals(other.pcrMaxVal))
			return false;
		if (pcrMinVal == null) {
			if (other.pcrMinVal != null)
				return false;
		} else if (!pcrMinVal.equals(other.pcrMinVal))
			return false;
		if (pcrModifiedBy == null) {
			if (other.pcrModifiedBy != null)
				return false;
		} else if (!pcrModifiedBy.equals(other.pcrModifiedBy))
			return false;
		if (pcrModifiedDt == null) {
			if (other.pcrModifiedDt != null)
				return false;
		} else if (!pcrModifiedDt.equals(other.pcrModifiedDt))
			return false;
		if (pcrPreparedBy == null) {
			if (other.pcrPreparedBy != null)
				return false;
		} else if (!pcrPreparedBy.equals(other.pcrPreparedBy))
			return false;
		if (pcrPreparedDt == null) {
			if (other.pcrPreparedDt != null)
				return false;
		} else if (!pcrPreparedDt.equals(other.pcrPreparedDt))
			return false;
		if (pcrStatus == null) {
			if (other.pcrStatus != null)
				return false;
		} else if (!pcrStatus.equals(other.pcrStatus))
			return false;
		return true;
	}

	
	
}
